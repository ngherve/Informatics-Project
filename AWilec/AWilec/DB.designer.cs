#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AWilec
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Wilec DB")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcontact(contact instance);
    partial void Updatecontact(contact instance);
    partial void Deletecontact(contact instance);
    partial void Insertaddress(address instance);
    partial void Updateaddress(address instance);
    partial void Deleteaddress(address instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    #endregion
		
		public DBDataContext() : 
				base(global::AWilec.Properties.Settings.Default.Wilec_DBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<contact> contacts
		{
			get
			{
				return this.GetTable<contact>();
			}
		}
		
		public System.Data.Linq.Table<address> addresses
		{
			get
			{
				return this.GetTable<address>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.contacts")]
	public partial class contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _email;
		
		private string _cellno;
		
		private string _altCell;
		
		private string _business;
		
		private EntitySet<employee> _employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OncellnoChanging(string value);
    partial void OncellnoChanged();
    partial void OnaltCellChanging(string value);
    partial void OnaltCellChanged();
    partial void OnbusinessChanging(string value);
    partial void OnbusinessChanged();
    #endregion
		
		public contact()
		{
			this._employees = new EntitySet<employee>(new Action<employee>(this.attach_employees), new Action<employee>(this.detach_employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cellno", DbType="VarChar(24)")]
		public string cellno
		{
			get
			{
				return this._cellno;
			}
			set
			{
				if ((this._cellno != value))
				{
					this.OncellnoChanging(value);
					this.SendPropertyChanging();
					this._cellno = value;
					this.SendPropertyChanged("cellno");
					this.OncellnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_altCell", DbType="VarChar(24)")]
		public string altCell
		{
			get
			{
				return this._altCell;
			}
			set
			{
				if ((this._altCell != value))
				{
					this.OnaltCellChanging(value);
					this.SendPropertyChanging();
					this._altCell = value;
					this.SendPropertyChanged("altCell");
					this.OnaltCellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_business", DbType="VarChar(24)")]
		public string business
		{
			get
			{
				return this._business;
			}
			set
			{
				if ((this._business != value))
				{
					this.OnbusinessChanging(value);
					this.SendPropertyChanging();
					this._business = value;
					this.SendPropertyChanged("business");
					this.OnbusinessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contact_employee", Storage="_employees", ThisKey="Id", OtherKey="contact_id")]
		public EntitySet<employee> employees
		{
			get
			{
				return this._employees;
			}
			set
			{
				this._employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.contact = this;
		}
		
		private void detach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.contact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.addresses")]
	public partial class address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _country;
		
		private string _city;
		
		private string _street;
		
		private string _postal_code;
		
		private EntitySet<employee> _employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstreetChanging(string value);
    partial void OnstreetChanged();
    partial void Onpostal_codeChanging(string value);
    partial void Onpostal_codeChanged();
    #endregion
		
		public address()
		{
			this._employees = new EntitySet<employee>(new Action<employee>(this.attach_employees), new Action<employee>(this.detach_employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(50)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street", DbType="VarChar(255)")]
		public string street
		{
			get
			{
				return this._street;
			}
			set
			{
				if ((this._street != value))
				{
					this.OnstreetChanging(value);
					this.SendPropertyChanging();
					this._street = value;
					this.SendPropertyChanged("street");
					this.OnstreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postal_code", DbType="VarChar(255)")]
		public string postal_code
		{
			get
			{
				return this._postal_code;
			}
			set
			{
				if ((this._postal_code != value))
				{
					this.Onpostal_codeChanging(value);
					this.SendPropertyChanging();
					this._postal_code = value;
					this.SendPropertyChanged("postal_code");
					this.Onpostal_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_employee", Storage="_employees", ThisKey="Id", OtherKey="address_id")]
		public EntitySet<employee> employees
		{
			get
			{
				return this._employees;
			}
			set
			{
				this._employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.address = this;
		}
		
		private void detach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.address = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.products")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _productname;
		
		private System.Nullable<int> _price;
		
		private string _Proimage;
		
		private System.Nullable<int> _quantity;
		
		private string _status;
		
		private System.Nullable<int> _supplier_id;
		
		private System.Nullable<int> _Ptype_id;
		
		private System.Nullable<int> _warehouse_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnproductnameChanging(string value);
    partial void OnproductnameChanged();
    partial void OnpriceChanging(System.Nullable<int> value);
    partial void OnpriceChanged();
    partial void OnProimageChanging(string value);
    partial void OnProimageChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onsupplier_idChanging(System.Nullable<int> value);
    partial void Onsupplier_idChanged();
    partial void OnPtype_idChanging(System.Nullable<int> value);
    partial void OnPtype_idChanged();
    partial void Onwarehouse_idChanging(System.Nullable<int> value);
    partial void Onwarehouse_idChanged();
    #endregion
		
		public product()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productname", DbType="VarChar(255)")]
		public string productname
		{
			get
			{
				return this._productname;
			}
			set
			{
				if ((this._productname != value))
				{
					this.OnproductnameChanging(value);
					this.SendPropertyChanging();
					this._productname = value;
					this.SendPropertyChanged("productname");
					this.OnproductnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int")]
		public System.Nullable<int> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Proimage", DbType="VarChar(255)")]
		public string Proimage
		{
			get
			{
				return this._Proimage;
			}
			set
			{
				if ((this._Proimage != value))
				{
					this.OnProimageChanging(value);
					this.SendPropertyChanging();
					this._Proimage = value;
					this.SendPropertyChanged("Proimage");
					this.OnProimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(70)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", DbType="Int")]
		public System.Nullable<int> supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ptype_id", DbType="Int")]
		public System.Nullable<int> Ptype_id
		{
			get
			{
				return this._Ptype_id;
			}
			set
			{
				if ((this._Ptype_id != value))
				{
					this.OnPtype_idChanging(value);
					this.SendPropertyChanging();
					this._Ptype_id = value;
					this.SendPropertyChanged("Ptype_id");
					this.OnPtype_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouse_id", DbType="Int")]
		public System.Nullable<int> warehouse_id
		{
			get
			{
				return this._warehouse_id;
			}
			set
			{
				if ((this._warehouse_id != value))
				{
					this.Onwarehouse_idChanging(value);
					this.SendPropertyChanging();
					this._warehouse_id = value;
					this.SendPropertyChanged("warehouse_id");
					this.Onwarehouse_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _employee_id;
		
		private string _username;
		
		private string _psw;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemployee_idChanging(int value);
    partial void Onemployee_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpswChanging(string value);
    partial void OnpswChanged();
    #endregion
		
		public user()
		{
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(255)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_psw", DbType="VarChar(255)")]
		public string psw
		{
			get
			{
				return this._psw;
			}
			set
			{
				if ((this._psw != value))
				{
					this.OnpswChanging(value);
					this.SendPropertyChanging();
					this._psw = value;
					this.SendPropertyChanged("psw");
					this.OnpswChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_user", Storage="_employee", ThisKey="employee_id", OtherKey="Id", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.user = null;
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.user = this;
						this._employee_id = value.Id;
					}
					else
					{
						this._employee_id = default(int);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employees")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _firstName;
		
		private string _lastName;
		
		private System.Nullable<System.DateTime> _dob;
		
		private string _gender;
		
		private System.Nullable<int> _contact_id;
		
		private System.Nullable<int> _address_id;
		
		private EntityRef<user> _user;
		
		private EntityRef<address> _address;
		
		private EntityRef<contact> _contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OndobChanging(System.Nullable<System.DateTime> value);
    partial void OndobChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void Oncontact_idChanging(System.Nullable<int> value);
    partial void Oncontact_idChanged();
    partial void Onaddress_idChanging(System.Nullable<int> value);
    partial void Onaddress_idChanged();
    #endregion
		
		public employee()
		{
			this._user = default(EntityRef<user>);
			this._address = default(EntityRef<address>);
			this._contact = default(EntityRef<contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(90)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(90)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="Date")]
		public System.Nullable<System.DateTime> dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(20)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_id", DbType="Int")]
		public System.Nullable<int> contact_id
		{
			get
			{
				return this._contact_id;
			}
			set
			{
				if ((this._contact_id != value))
				{
					if (this._contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncontact_idChanging(value);
					this.SendPropertyChanging();
					this._contact_id = value;
					this.SendPropertyChanged("contact_id");
					this.Oncontact_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_id", DbType="Int")]
		public System.Nullable<int> address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					if (this._address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaddress_idChanging(value);
					this.SendPropertyChanging();
					this._address_id = value;
					this.SendPropertyChanged("address_id");
					this.Onaddress_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_user", Storage="_user", ThisKey="Id", OtherKey="employee_id", IsUnique=true, IsForeignKey=false)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.employee = null;
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.employee = this;
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_employee", Storage="_address", ThisKey="address_id", OtherKey="Id", IsForeignKey=true)]
		public address address
		{
			get
			{
				return this._address.Entity;
			}
			set
			{
				address previousValue = this._address.Entity;
				if (((previousValue != value) 
							|| (this._address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._address.Entity = null;
						previousValue.employees.Remove(this);
					}
					this._address.Entity = value;
					if ((value != null))
					{
						value.employees.Add(this);
						this._address_id = value.Id;
					}
					else
					{
						this._address_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contact_employee", Storage="_contact", ThisKey="contact_id", OtherKey="Id", IsForeignKey=true)]
		public contact contact
		{
			get
			{
				return this._contact.Entity;
			}
			set
			{
				contact previousValue = this._contact.Entity;
				if (((previousValue != value) 
							|| (this._contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._contact.Entity = null;
						previousValue.employees.Remove(this);
					}
					this._contact.Entity = value;
					if ((value != null))
					{
						value.employees.Add(this);
						this._contact_id = value.Id;
					}
					else
					{
						this._contact_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
