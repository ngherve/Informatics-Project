//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TYPPrototype.ProductService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/WirelecWCFService")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int P_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int P_PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int P_QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Supplier_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string W_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bin_locationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_Code {
            get {
                return this.P_CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.P_CodeField, value) != true)) {
                    this.P_CodeField = value;
                    this.RaisePropertyChanged("P_Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int P_ID {
            get {
                return this.P_IDField;
            }
            set {
                if ((this.P_IDField.Equals(value) != true)) {
                    this.P_IDField = value;
                    this.RaisePropertyChanged("P_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_Image {
            get {
                return this.P_ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.P_ImageField, value) != true)) {
                    this.P_ImageField = value;
                    this.RaisePropertyChanged("P_Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_Name {
            get {
                return this.P_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.P_NameField, value) != true)) {
                    this.P_NameField = value;
                    this.RaisePropertyChanged("P_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int P_Price {
            get {
                return this.P_PriceField;
            }
            set {
                if ((this.P_PriceField.Equals(value) != true)) {
                    this.P_PriceField = value;
                    this.RaisePropertyChanged("P_Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int P_Quantity {
            get {
                return this.P_QuantityField;
            }
            set {
                if ((this.P_QuantityField.Equals(value) != true)) {
                    this.P_QuantityField = value;
                    this.RaisePropertyChanged("P_Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_Type {
            get {
                return this.P_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.P_TypeField, value) != true)) {
                    this.P_TypeField = value;
                    this.RaisePropertyChanged("P_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Supplier_Name {
            get {
                return this.Supplier_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Supplier_NameField, value) != true)) {
                    this.Supplier_NameField = value;
                    this.RaisePropertyChanged("Supplier_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string W_Name {
            get {
                return this.W_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.W_NameField, value) != true)) {
                    this.W_NameField = value;
                    this.RaisePropertyChanged("W_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bin_location {
            get {
                return this.bin_locationField;
            }
            set {
                if ((object.ReferenceEquals(this.bin_locationField, value) != true)) {
                    this.bin_locationField = value;
                    this.RaisePropertyChanged("bin_location");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice", Namespace="http://schemas.datacontract.org/2004/07/WirelecWCFService")]
    [System.SerializableAttribute()]
    public partial class Invoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int C_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INV_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int INV_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Inv_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Total_PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int C_ID {
            get {
                return this.C_IDField;
            }
            set {
                if ((this.C_IDField.Equals(value) != true)) {
                    this.C_IDField = value;
                    this.RaisePropertyChanged("C_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INV_Date {
            get {
                return this.INV_DateField;
            }
            set {
                if ((object.ReferenceEquals(this.INV_DateField, value) != true)) {
                    this.INV_DateField = value;
                    this.RaisePropertyChanged("INV_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int INV_ID {
            get {
                return this.INV_IDField;
            }
            set {
                if ((this.INV_IDField.Equals(value) != true)) {
                    this.INV_IDField = value;
                    this.RaisePropertyChanged("INV_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Inv_Type {
            get {
                return this.Inv_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.Inv_TypeField, value) != true)) {
                    this.Inv_TypeField = value;
                    this.RaisePropertyChanged("Inv_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_Code {
            get {
                return this.P_CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.P_CodeField, value) != true)) {
                    this.P_CodeField = value;
                    this.RaisePropertyChanged("P_Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total_Price {
            get {
                return this.Total_PriceField;
            }
            set {
                if ((this.Total_PriceField.Equals(value) != true)) {
                    this.Total_PriceField = value;
                    this.RaisePropertyChanged("Total_Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Damaged", Namespace="http://schemas.datacontract.org/2004/07/WirelecWCFService")]
    [System.SerializableAttribute()]
    public partial class Damaged : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int D_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateDamagedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int P_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string P_PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int D_ID {
            get {
                return this.D_IDField;
            }
            set {
                if ((this.D_IDField.Equals(value) != true)) {
                    this.D_IDField = value;
                    this.RaisePropertyChanged("D_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateDamaged {
            get {
                return this.DateDamagedField;
            }
            set {
                if ((object.ReferenceEquals(this.DateDamagedField, value) != true)) {
                    this.DateDamagedField = value;
                    this.RaisePropertyChanged("DateDamaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int P_ID {
            get {
                return this.P_IDField;
            }
            set {
                if ((this.P_IDField.Equals(value) != true)) {
                    this.P_IDField = value;
                    this.RaisePropertyChanged("P_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P_Photo {
            get {
                return this.P_PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.P_PhotoField, value) != true)) {
                    this.P_PhotoField = value;
                    this.RaisePropertyChanged("P_Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductService.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProducts", ReplyAction="http://tempuri.org/IProductService/GetAllProductsResponse")]
        TYPPrototype.ProductService.Product[] GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProducts", ReplyAction="http://tempuri.org/IProductService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<TYPPrototype.ProductService.Product[]> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllInvoices", ReplyAction="http://tempuri.org/IProductService/GetAllInvoicesResponse")]
        TYPPrototype.ProductService.Invoice[] GetAllInvoices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllInvoices", ReplyAction="http://tempuri.org/IProductService/GetAllInvoicesResponse")]
        System.Threading.Tasks.Task<TYPPrototype.ProductService.Invoice[]> GetAllInvoicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductbyID", ReplyAction="http://tempuri.org/IProductService/GetProductbyIDResponse")]
        TYPPrototype.ProductService.Product GetProductbyID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductbyID", ReplyAction="http://tempuri.org/IProductService/GetProductbyIDResponse")]
        System.Threading.Tasks.Task<TYPPrototype.ProductService.Product> GetProductbyIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        string DeleteProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        System.Threading.Tasks.Task<string> DeleteProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SearchProduct", ReplyAction="http://tempuri.org/IProductService/SearchProductResponse")]
        TYPPrototype.ProductService.Product SearchProduct(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SearchProduct", ReplyAction="http://tempuri.org/IProductService/SearchProductResponse")]
        System.Threading.Tasks.Task<TYPPrototype.ProductService.Product> SearchProductAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddDamagedProduct", ReplyAction="http://tempuri.org/IProductService/AddDamagedProductResponse")]
        string AddDamagedProduct(TYPPrototype.ProductService.Damaged d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddDamagedProduct", ReplyAction="http://tempuri.org/IProductService/AddDamagedProductResponse")]
        System.Threading.Tasks.Task<string> AddDamagedProductAsync(TYPPrototype.ProductService.Damaged d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProduct", ReplyAction="http://tempuri.org/IProductService/AddProductResponse")]
        string AddProduct(TYPPrototype.ProductService.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProduct", ReplyAction="http://tempuri.org/IProductService/AddProductResponse")]
        System.Threading.Tasks.Task<string> AddProductAsync(TYPPrototype.ProductService.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProduct", ReplyAction="http://tempuri.org/IProductService/UpdateProductResponse")]
        string UpdateProduct(TYPPrototype.ProductService.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProduct", ReplyAction="http://tempuri.org/IProductService/UpdateProductResponse")]
        System.Threading.Tasks.Task<string> UpdateProductAsync(TYPPrototype.ProductService.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetDamagedProducts", ReplyAction="http://tempuri.org/IProductService/GetDamagedProductsResponse")]
        TYPPrototype.ProductService.Damaged[] GetDamagedProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetDamagedProducts", ReplyAction="http://tempuri.org/IProductService/GetDamagedProductsResponse")]
        System.Threading.Tasks.Task<TYPPrototype.ProductService.Damaged[]> GetDamagedProductsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : TYPPrototype.ProductService.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<TYPPrototype.ProductService.IProductService>, TYPPrototype.ProductService.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TYPPrototype.ProductService.Product[] GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<TYPPrototype.ProductService.Product[]> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public TYPPrototype.ProductService.Invoice[] GetAllInvoices() {
            return base.Channel.GetAllInvoices();
        }
        
        public System.Threading.Tasks.Task<TYPPrototype.ProductService.Invoice[]> GetAllInvoicesAsync() {
            return base.Channel.GetAllInvoicesAsync();
        }
        
        public TYPPrototype.ProductService.Product GetProductbyID(int id) {
            return base.Channel.GetProductbyID(id);
        }
        
        public System.Threading.Tasks.Task<TYPPrototype.ProductService.Product> GetProductbyIDAsync(int id) {
            return base.Channel.GetProductbyIDAsync(id);
        }
        
        public string DeleteProduct(int id) {
            return base.Channel.DeleteProduct(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteProductAsync(int id) {
            return base.Channel.DeleteProductAsync(id);
        }
        
        public TYPPrototype.ProductService.Product SearchProduct(string name) {
            return base.Channel.SearchProduct(name);
        }
        
        public System.Threading.Tasks.Task<TYPPrototype.ProductService.Product> SearchProductAsync(string name) {
            return base.Channel.SearchProductAsync(name);
        }
        
        public string AddDamagedProduct(TYPPrototype.ProductService.Damaged d) {
            return base.Channel.AddDamagedProduct(d);
        }
        
        public System.Threading.Tasks.Task<string> AddDamagedProductAsync(TYPPrototype.ProductService.Damaged d) {
            return base.Channel.AddDamagedProductAsync(d);
        }
        
        public string AddProduct(TYPPrototype.ProductService.Product product) {
            return base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task<string> AddProductAsync(TYPPrototype.ProductService.Product product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public string UpdateProduct(TYPPrototype.ProductService.Product product) {
            return base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductAsync(TYPPrototype.ProductService.Product product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public TYPPrototype.ProductService.Damaged[] GetDamagedProducts() {
            return base.Channel.GetDamagedProducts();
        }
        
        public System.Threading.Tasks.Task<TYPPrototype.ProductService.Damaged[]> GetDamagedProductsAsync() {
            return base.Channel.GetDamagedProductsAsync();
        }
    }
}
